#include <18f4550.h>
#device PASS_STRINGS = IN_RAM
#device adc = 10
#fuses xt, nowdt
#use I2C(MASTER, SDA=PIN_B0, SCL=PIN_B1, FAST=400000, STREAM=SSD1306_STREAM)
#use delay(internal = 8M)
//#define LCD_DATA_PORT getenv("SFR:PORTD")   

#define SSD1306_I2C_ADDRESS 0x78
#include"lib/SSD1306_OLED.c" 

#byte TRISA = 0xF92
#byte PORTA = 0xF80
#byte TRISD = 0xF95
#byte PORTD = 0xF83

//#include <lcd.c>

char buffer[20];
void main()
{
   TRISA = 0xFF;
   TRISD = 0x00;
   PORTD = 0x00;
   //lcd_init();
   
   setup_adc_ports(AN0);
   setup_adc(ADC_CLOCK_DIV_8);
   set_adc_channel(0);
   delay_us(20);
   
   int16 valor_digital = 0;
   float valor_tension = 0;
   float  porcentaje = 0;
   double temperatura = 0;
   
   SSD1306_Begin(SSD1306_SWITCHCAPVCC, SSD1306_I2C_ADDRESS);
   SSD1306_ClearDisplay();
   SSD1306_Display();
   
   SSD1306_DrawText(30, 1, "Control PWM", 1);
   SSD1306_DrawRect(10, 12, 108, 52);
   
   SSD1306_DrawText(15, 20, "ADC: ", 1);
   SSD1306_DrawText(15, 35, "Temperatura: ", 1);
   SSD1306_DrawText(15, 50, "Prcentaje:", 1);
   SSD1306_Display();
   
   while(TRUE)
   {
      set_adc_channel(0);
      delay_us(20);
      valor_digital = read_adc();
      delay_us(20);
      valor_tension = 5.0*(valor_digital/1023.0);
      temperatura = valor_tension*100;
      
      sprintf(buffer, "%Lu", valor_digital);
      SSD1306_DrawText(40, 20, buffer, 1);
      sprintf(buffer, "%.1f", temperatura);
      SSD1306_DrawText(70, 35, buffer, 1);
      
      
      set_adc_channel(1);
      delay_us(20);
      valor_digital = read_adc();
      delay_us(20);
      porcentaje = ((1023.0 - valor_digital) / 1023.0 )* 100.0;
      sprintf(buffer, "%.1f", porcentaje);
      SSD1306_DrawText(90, 50, buffer, 1);
      SSD1306_Display();
      delay_ms(100);
      if (porcentaje < (100/8) * 2 && porcentaje >= (100/8) * 1)
      {
         PORTD = 0x01;
      }else if(porcentaje < (100/8) * 3 && porcentaje >= (100/8) * 2)
      {
         PORTD = 0x03;
      }else if (porcentaje < (100/8) * 4 && porcentaje >= (100/8) * 3)
      {
         PORTD = 0x07;
      }else if (porcentaje < (100/8) * 5 && porcentaje >= (100/8) * 4)
      {
         PORTD = 0x0F;
      }else if (porcentaje < (100/8) * 6 && porcentaje >= (100/8) * 5)
      {
         PORTD = 0x1F;
      }else if (porcentaje < (100/8) * 7 && porcentaje >= (100/8) * 6)
      {
         PORTD = 0x3F;
      }else if (porcentaje < (100/8) * 8 && porcentaje >= (100/8) * 7)
      {
         PORTD = 0x7F;
      }else if (porcentaje == 100)
      {
         PORTD = 0xFF;
      }else
      {
         PORTD = 0x00;
      }
      
   }
}
/*//#include <main.h>
#include<18F4550.h>
#device ADC = 10
#device PASS_STRINGS = IN_RAM
//#fuses HS, NOWDT, NOPROTECT, NOLVP,PUT,CPUDIV1, VREGEN, NOPBADEN
#fuses xt, nowdt
#use I2C(MASTER, SDA=PIN_B0, SCL=PIN_B1, FAST=400000, STREAM=SSD1306_STREAM)
#use delay(internal=8M)

#define SSD1306_I2C_ADDRESS 0x78
#include"lib/SSD1306_OLED.c" 

#byte TRISA=0xF92
#byte PORTA=0xF80

char buffer[16];

void main()
{
   TRISA = 0xFF;
   //setup_ccp1(CCP_PWM);
   setup_adc_ports(AN0);
   //setup_adc_ports(AN0_TO_AN1_ANALOG);
   setup_adc(ADC_CLOCK_DIV_8);
   set_adc_channel(0);
   //set_pwm1_duty(read_adc());
   delay_us(40);
   
   SSD1306_Begin(SSD1306_SWITCHCAPVCC, SSD1306_I2C_ADDRESS);
   SSD1306_ClearDisplay();
   SSD1306_Display();
   
   int16 valor_digital = 0;
   float valor_tension = 0;
   
   SSD1306_DrawText(30, 1, "Control PWM", 1);
   SSD1306_DrawRect(10, 12, 108, 52);
   SSD1306_Display();
   
   while(TRUE)
   {
      
      
//!      float valor_adc = read_adc();
      
//!      temperatura = voltaje * 100;

 
      //set_pwm1_duty(valor_pwm);
     // set_adc_channel(0);
      delay_us(60);
     
      valor_digital = read_adc();
      delay_ms(200);
      //SSD1306_ClearDisplay();
      valor_tension = 5.0 * (valor_digital / 1023.0);
      //sprintf(buffer, "T = %.2f", (valor_pwm * 500.0 / 1023.0));
      sprintf(buffer, "ADC %ld", valor_digital );
      SSD1306_DrawText(12, 15, buffer, 2);
      sprintf(buffer, "V = %01.3f", valor_tension );
      SSD1306_DrawText(12, 40, buffer, 2);
      SSD1306_Display();
      delay_ms(1200);
//!      set_adc_channel(1);
//!      delay_us(200);
//!      valor_pwm = read_adc();
//!      delay_ms(200);
//!      //voltaje =  valor_pwm / 1023.0 * 5.0;
//!      voltaje =  100 / 1023.0 * valor_pwm;
//!      sprintf(buffer, "V = %.2f", voltaje);
//!      SSD1306_DrawText(12, 40, buffer, 2);
//!      SSD1306_Display();
//!      delay_ms(400);
   }

}*/
